@model UserViewListDTO

@{
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    var areaName = ViewContext.RouteData.Values["area"].ToString();
}

@await Component.InvokeAsync("FormTitle")

@(Html.DevExtreme().Form<UserViewListDTO>
                    ().ID("form").ColCount(4).Items(items =>
                    {
                        items.AddGroup().Caption(Vinorsoft_NHNN_Report_DevEx_App_Resource.User_Info).Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.EmployeeNumber).Editor(e => e.TextBox().ReadOnly(true));
                            groupItems.AddSimpleFor(m => m.FullName).Editor(e => e.TextBox().ReadOnly(true));
                            //groupItems.AddSimpleFor(m => m.Name).Editor(e => e.TextBox().ReadOnly(true));
                            groupItems.AddSimpleFor(m => m.ParentDeptName).Editor(e => e.TextBox().ReadOnly(true));
                            groupItems.AddSimpleFor(m => m.DeptName).Editor(e => e.TextBox().ReadOnly(true));
                            groupItems.AddSimpleFor(m => m.JobtitleName).Editor(e => e.TextBox().ReadOnly(true));
                        }).ColSpan(4).ColCount(4);
                    }).ValidationGroup("User").FormData(Model)
)

@(Html.DevExtreme().DataGrid<UserViewDetailDTO>
                    ().ID("gridContainer").DataSource(d => d.Mvc().Controller(controllerName).Area(areaName).LoadAction("GetAccessHistory").DeleteAction("Delete").Key("Id").LoadParams(new { employeeNumber = Model.EmployeeNumber }))
                    .Columns(column =>
                    {
                        column.AddFor(m => m.CheckInOutTime).Format("dd/MM/yyyy").DataType(GridColumnDataType.DateTime).Width(150).Alignment(HorizontalAlignment.Center).SortIndex(0);
                        column.AddFor(m => m.DisplayTime).Width(100).Alignment(HorizontalAlignment.Center).AllowFiltering(false).AllowSorting(false).AllowFiltering(false);
                        column.AddFor(m => m.InOut).Width(80).AllowHeaderFiltering(true).AllowFiltering(false);
                        column.AddFor(m => m.ControllerCode).Width(300).AllowFiltering(false).AllowHeaderFiltering(true);
                        column.AddFor(m => m.Door).AllowFiltering(false).AllowHeaderFiltering(true);
                    }).ToDefaultOption().Editing(e => e.AllowAdding(false).AllowDeleting(false).AllowUpdating(false)).Grouping(grouping => grouping.AutoExpandAll(false))
                     .SortByGroupSummaryInfo(i => i.Add().SummaryItem("count"))
                    .Summary(s => s.TotalItems(items =>
                    {
                        items.AddFor(m => m.CheckInOutTime).SummaryType(SummaryType.Count).DisplayFormat(Vinorsoft_NHNN_Report_DevEx_App_Resource.Sumary_Total + " {0}");
                    }).GroupItems(items =>
                    {
                        items.Add()
                           .SummaryType(SummaryType.Count)
                           .DisplayFormat("{0}");
                    })).OnToolbarPreparing("toolbar_preparing").Export(e => e.Enabled(true).AllowExportSelectedData(true).FileName($"{Model.FullName}"))
                    .OnFileSaving("OnFileSaving")
)

<script>
    var hideVuPhong = true;
    function toolbar_preparing(e) {
            var dataGrid = e.component;
            e.toolbarOptions.items.unshift({
                location: "after",
                widget: "dxButton",
                options: {
                    icon: "fa fa-arrow-left",
                    onClick: function () {
                        window.location.href = '@Url.Action("Index", controllerName , new { Area = areaName })'
                    }
                }
            },
                {
                    location: "after",
                    widget: "dxButton",
                    options: {
                        icon: "print",
                        onClick: function () {
                            print = true;
                            dataGrid.exportToExcel(false);
                        }
                    }
                });
         }

</script>

@await Html.PartialAsync("_ProcessExcelScripts")

