@model SearchReportQuickDTO
@{
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    var areaName = ViewContext.RouteData.Values["area"].ToString();
}

@await Component.InvokeAsync("FormTitle")

@using (Html.BeginForm("Index", controllerName, FormMethod.Get, new { Area = areaName, id = "SearchForm" }))
{
    @(Html.DevExtreme().Form<SearchReportQuickDTO>
                                                                            ().ID("form").ColCount(4).Items(items =>
                                                                            {
                                                                                items.AddEmpty();
                                                                                items.AddGroup().ColSpan(3).ColCount(5).Items(groupItems =>
                                                                                {
                                                                                    groupItems.AddSimpleFor(m => m.SearchDate).Editor(e => e.DateBox().Width(150));
                                                                                    groupItems.AddSimpleFor(m => m.StartHour).Editor(e => e.NumberBox().Max(23).Width(100));
                                                                                    groupItems.AddSimpleFor(m => m.EndHour).Editor(e => e.NumberBox().Max(23).Width(100));
                                                                                    groupItems.AddSimpleFor(m => m.Inside);
                                                                                    groupItems.AddSimple().Template(@<text>
                                                                                        @(Html.DevExtreme().Button().Icon("fa fa-search").Text(Vinorsoft_NHNN_Report_DevEx_App_Resource.Button_Submit).Type(ButtonType.Normal).UseSubmitBehavior(true).ValidationGroup("User").Width(100)
                                                                                        )
                                                                                    </text>);
                                                                                                                                                            });
                                                                                                                                                        }).ValidationGroup("User").FormData(Model)
    )
}

@(Html.DevExtreme().DataGrid<UserViewDetailDTO>
                                            ().ID("gridContainer").DataSource(d => d.Mvc().Controller(controllerName).Area(areaName).LoadAction("GetV2").LoadParams(new { startdate = Model.StartDate.Value.ToString("yyyy-MM-dd HH:mm"), enddate = Model.EndDate.Value.ToString("yyyy-MM-dd HH:mm"), inside = Model.Inside }).Key("EmployeeNumber"))
                                            .WordWrapEnabled(true)
                                            .Columns(column =>
                                            {
                                                column.AddFor(m => m.EmployeeNumber).Width(80).Alignment(HorizontalAlignment.Center).Fixed(true);
                                                column.AddFor(m => m.FullName).Width(150).Fixed(true);
                                                column.AddFor(m => m.ParentDeptName).Width(150).AllowFiltering(false).AllowHeaderFiltering(true);
                                                column.AddFor(m => m.DeptName).Width(150).AllowFiltering(false).AllowHeaderFiltering(true);
                                                column.AddFor(m => m.JobtitleName).Width(150).AllowFiltering(false).AllowHeaderFiltering(true);
                                                column.AddFor(m => m.CheckInOutTime).Format("dd/MM/yyyy").Width(120).AllowFiltering(false).AllowHeaderFiltering(true);
                                                column.AddFor(m => m.DisplayTime).Width(80)
                                                .AllowSorting(true)
                                                .AllowFiltering(false).AllowHeaderFiltering(true)
                                                ;
                                                column.AddFor(m => m.Door).AllowFiltering(false).AllowHeaderFiltering(true);

                                            }).ToDefaultOption().Editing(e => e.AllowAdding(false).AllowDeleting(false).AllowUpdating(false))
                                            .Export(e => e.Enabled(true).AllowExportSelectedData(true).FileName($"{Vinorsoft_NHNN_Report_DevEx_App_Resource.Export_QuickReport_FileName}__Ngày {Model.SearchDate.Value.ToString("dd-MM-yyyy")}")).OnFileSaving("OnFileSaving").OnToolbarPreparing("OnToolbarPreparing")
)

@await Html.PartialAsync("_ProcessExcelScripts")


