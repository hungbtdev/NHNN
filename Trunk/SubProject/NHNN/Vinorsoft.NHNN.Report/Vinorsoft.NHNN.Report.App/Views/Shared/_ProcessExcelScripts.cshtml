<script>
    var print = false;
    function OnToolbarPreparing(e) {
        var dataGrid = e.component;
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                icon: "print",
                onClick: function() {
                    print = true;
                    dataGrid.exportToExcel(false);
                }
            }
        });
    }

    function customizeExportData(columns, rows) {
        rows.forEach(function(row) {
            var rowValues = row.values;

            for (var i = 0; i < rowValues.length; i++) {
                if (rowValues[i])
                    rowValues[i] = (rowValues[i] + '').replace(/<br>/g, "\r\n");
            }
        })
    }

    function getByKey(filters, key) {
        var result = [];
        if (filters.filter(e => Array.isArray(e)).length > 0) {
            result = filters.map(function(e) {
                if (Array.isArray(e) && e[0] != key) {
                    return getByKey(e, key);
                }
                return e.filterValue;
            });
        }
        else if (filters.length > 0 && filters[0] == key) {
            return filters;
        }

        if (result.length > 0 && Array.isArray(result[0])) {
            result = result.filter(e => e && e.length > 0);
            return result[0] || [];
        }
        else
            return result || [];
    }

    function uploadData(data) {
        var formData = new FormData();
        formData.append('fname', data.fileName);
        formData.append('data', data.data);
        formData.append('IsPrint', print);
        formData.append('ReportTitle', data.fileName);
        if (typeof (hideVuPhong) != "undefined") {
            formData.append('HideVuPhong', hideVuPhong);
        }
        var vuValue = "@Html.Raw(Vinorsoft_NHNN_Report_DevEx_App_Resource.All_Value)";
        var phongValue = "@Html.Raw(Vinorsoft_NHNN_Report_DevEx_App_Resource.All_Value)";

        var filters = $("#gridContainer").dxDataGrid('instance').getCombinedFilter();
        if (filters) {

            var _temp = [];
            var _tempUCuc = getByKey(filters, "User.Cuc");
            var _tempCuc = getByKey(filters, "Cuc");
            if (_tempUCuc) {
                _temp = _temp.concat(_tempUCuc);
            }
            if (_tempCuc) {
                _temp = _temp.concat(_tempCuc);
            }

            _temp = _temp.filter(e => e && e != "Cuc" && e != "User.Cuc" && e != "User.Phong" && e != "Phong" && e != "=");

            if (_temp.length > 0) {
                vuValue = _temp.filter(e => e).join();
            }

            var tempUPhong = getByKey(filters, "User.Phong");
            var tempPhong = getByKey(filters, "Phong");
            _temp = [];


            if (tempUPhong) {
                _temp = _temp.concat(tempUPhong);
            }
            if (tempPhong) {
                _temp = _temp.concat(tempPhong);
            }

            _temp = _temp.filter(e => e && e != "Cuc" && e != "User.Cuc" && e != "User.Phong" && e != "Phong" && e != "=");

            if (_temp.length > 0) {
                phongValue = _temp.filter(e => e).join();
            }
        }

        formData.append('Vu', vuValue);
        formData.append('Phong', phongValue);

        print = false;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ProcessExcel")',
            data: formData,
            processData: false,
            contentType: false,
            responseType: 'blob'
        }).done(function(reponse) {
            if (!reponse.IsPrint) {
                window.location.href = '@Url.Action("Download")?filename=' + reponse.filename + '&orgname=' + data.fileName;
            }
            else {
                window.open(reponse.url, '_blank');
            }
        });
    }

    function OnFileSaving(data) {
        uploadData(data);
        data.cancel = true;
    }
</script>