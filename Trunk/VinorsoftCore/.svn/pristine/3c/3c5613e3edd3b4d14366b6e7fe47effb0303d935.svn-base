@model ResetPasswordDTO
@{
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    var areaName = ViewContext.RouteData.Values["area"].ToString();
}

@await Component.InvokeAsync("FormTitle")

<div id="form-container">

    @await Html.PartialAsync("_ErrorAlert")

    @using (Html.BeginForm("ResetPassword", controllerName, FormMethod.Post, new { Area = areaName, id = "ResetPasswordForm" }))
    {
        @Html.HiddenFor(m => m.Id)

        @(Html.DevExtreme().Form<ResetPasswordDTO>
                            ().ID("form").ColCount(3).Items(items =>
                            {
                                items.AddEmpty();
                                items.AddGroup().Items(groupItems =>
                                {
                                    groupItems.AddSimpleFor(m => m.NewPassword).Editor(e => e.TextBox().Mode(TextBoxMode.Password));
                                    groupItems.AddSimpleFor(m => m.ConfirmPassword).Editor(e => e.TextBox().Mode(TextBoxMode.Password));
                                });
                                items.AddEmpty();
                            }).ValidationGroup("ResetPassword").FormData(Model)
        )
        <hr />

        <div class="row">
            <div class="col-md-12 text-right">
                @(Html.DevExtreme().Button().Text(Resources.Button_Cancel).UseSubmitBehavior(false).Width(100).OnClick("goBack")
                )
                @(Html.DevExtreme().Button().Text(Resources.Button_Save).Type(ButtonType.Success).UseSubmitBehavior(true).ValidationGroup("ResetPassword").Width(100)
                )
            </div>
        </div>
    }
</div>

<script>
    function goBack() {
        window.location.href = '@Url.Action("Index", controllerName, new { Area = areaName })'
    }
</script>