// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vinorsoft.Core.VDbContext;

namespace Vinorsoft.Core.VDbContext.Migrations.NotificationDb
{
    [DbContext(typeof(NotificationDbContext))]
    partial class NotificationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vinorsoft.Core.Entities.BaseTemplates", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<bool>("Active");

                    b.Property<string>("AppName");

                    b.Property<string>("Body");

                    b.Property<string>("Code");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Subject");

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Noti_BaseTemplates");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseTemplates");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.DeviceTokens", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("AppName");

                    b.Property<string>("Brand");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("DeviceName");

                    b.Property<string>("ExpoPushToken");

                    b.Property<string>("FCMToken");

                    b.Property<bool>("IsDevice");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("ModelName");

                    b.Property<string>("OsName");

                    b.Property<string>("OsVersion");

                    b.Property<Guid?>("RefId");

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Noti_DeviceTokens");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.NotificationMessages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("AppName");

                    b.Property<string>("Body");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("JsonData");

                    b.Property<int>("NotificationType");

                    b.Property<int>("ReadStatus");

                    b.Property<string>("Recipient");

                    b.Property<int>("SendStatus");

                    b.Property<string>("Subject");

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Noti_NotificationMessages");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.SendLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("Error");

                    b.Property<string>("From");

                    b.Property<Guid>("NotificationMessageId");

                    b.Property<Guid?>("NotificationMessagesId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<bool>("Success");

                    b.Property<Guid?>("TenantId");

                    b.Property<string>("To");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("NotificationMessagesId");

                    b.ToTable("Noti_SendLogs");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.EmailTemplates", b =>
                {
                    b.HasBaseType("Vinorsoft.Core.Entities.BaseTemplates");

                    b.HasDiscriminator().HasValue("EmailTemplates");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.FCMTemplates", b =>
                {
                    b.HasBaseType("Vinorsoft.Core.Entities.BaseTemplates");

                    b.HasDiscriminator().HasValue("FCMTemplates");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.SMSTemplates", b =>
                {
                    b.HasBaseType("Vinorsoft.Core.Entities.BaseTemplates");

                    b.HasDiscriminator().HasValue("SMSTemplates");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.SendLogs", b =>
                {
                    b.HasOne("Vinorsoft.Core.Entities.NotificationMessages")
                        .WithMany("SendLogs")
                        .HasForeignKey("NotificationMessagesId");
                });
#pragma warning restore 612, 618
        }
    }
}
