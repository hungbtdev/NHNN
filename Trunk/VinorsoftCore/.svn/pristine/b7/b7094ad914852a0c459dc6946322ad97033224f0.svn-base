// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vinorsoft.Core.VDbContext;

namespace Vinorsoft.Core.VDbContext.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    partial class AuthDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vinorsoft.Core.Entities.Permissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Sys_Permissions");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.PermitObjectPermissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<Guid?>("GroupId");

                    b.Property<Guid>("PermissionId");

                    b.Property<Guid>("PermitObjectId");

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("PermitObjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Sys_PermitObjectPermissions");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.PermitObjectSidebars", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<Guid?>("ModuleId");

                    b.Property<Guid>("PermitObjectId");

                    b.Property<string>("SidebarMenuIds");

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("PermitObjectId");

                    b.ToTable("Sys_PermitObjectSidebars");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.PermitObjects", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("ControllerNames");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Sys_PermitObjects");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.UserGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Sys_UserGroups");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.UserInGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<Guid>("GroupId");

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Sys_UserInGroups");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email")
                        .HasMaxLength(1000);

                    b.Property<int>("FailedCount");

                    b.Property<string>("FirstName")
                        .HasMaxLength(1000);

                    b.Property<string>("LastName")
                        .HasMaxLength(1000);

                    b.Property<bool>("Locked");

                    b.Property<DateTime?>("LockedEnd");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("Phone")
                        .HasMaxLength(1000);

                    b.Property<Guid?>("ProfileId");

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Sys_Users");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.PermitObjectPermissions", b =>
                {
                    b.HasOne("Vinorsoft.Core.Entities.UserGroups", "UserGroups")
                        .WithMany("PermitObjectPermissions")
                        .HasForeignKey("GroupId");

                    b.HasOne("Vinorsoft.Core.Entities.Permissions", "Permissions")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vinorsoft.Core.Entities.PermitObjects", "PermitObjects")
                        .WithMany()
                        .HasForeignKey("PermitObjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vinorsoft.Core.Entities.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.PermitObjectSidebars", b =>
                {
                    b.HasOne("Vinorsoft.Core.Entities.PermitObjects", "PermitObjects")
                        .WithMany("PermitObjectSidebars")
                        .HasForeignKey("PermitObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.UserInGroups", b =>
                {
                    b.HasOne("Vinorsoft.Core.Entities.UserGroups", "UserGroups")
                        .WithMany("UserInGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vinorsoft.Core.Entities.Users", "Users")
                        .WithMany("UserInGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
