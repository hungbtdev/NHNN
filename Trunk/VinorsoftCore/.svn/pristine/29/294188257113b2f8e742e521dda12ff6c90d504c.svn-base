@{
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
}

@await Component.InvokeAsync("FormTitle")

@(Html.DevExtreme().DataGrid<FCMTemplateDTO>().ID("gridContainer").DataSource(d => d.Mvc().LoadAction("Get").DeleteAction("Delete").Key("Id"))
                                        .Columns(column =>
                                        {
                                            column.AddFor(m => m.Code).Width(200);
                                            column.AddFor(m => m.AppName).Width(200);
                                            column.AddFor(m => m.Subject);
                                            column.AddFor(m => m.Body);
                                           
                                            column.Add().Type(GridCommandColumnType.Buttons).Buttons(b =>
                                            {
                                                b.Add().Name(GridColumnButtonName.Edit).OnClick("notificationJs.OnEdit");
                                                b.Add().Name(GridColumnButtonName.Delete);
                                            });
                                        }).ToDefaultOption()
                                       .OnToolbarPreparing("toolbar_preparing")
                                       .Editing(e => e.AllowAdding(false)
                                                    .AllowDeleting(true)
                                                    .AllowUpdating(true).UseIcons(true))
                                    .Export(e => e.Enabled(true).AllowExportSelectedData(true).FileName($"{NotificationResource.Export_FCMtemplate_FileName}"))

)

@await Html.PartialAsync("_Scripts")

<script>
    var notificationJs = {
        OnEdit: function (e) {
            window.location.href = "@Url.Action($"Update{controllerName}")/" + e.row.data.Id;
        }
    }
</script>

