@{
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    var areaName = ViewContext.RouteData.Values["area"].ToString();
}

@await Component.InvokeAsync("FormTitle")

@(Html.DevExtreme().DataGrid<UserDTO>().DataSource(d => d.Mvc().Controller(controllerName).Area(areaName).LoadAction("Get").DeleteAction("Delete").Key("Id"))
                .Columns(column =>
                {
                    column.AddFor(m => m.Username);
                    column.AddFor(m => m.FirstName);
                    column.AddFor(m => m.LastName);
                    column.AddFor(m => m.Locked);
                    column.AddFor(m => m.LockedEnd).Format(Vinorsoft.Core.CoreConstants.DateTimeFormat);
                    column.AddFor(m => m.UserStatus.Name).Caption(Vinorsoft.Core.Resx.AuthResource.User_UserStatus);
                    column.AddFor(m => m.Created).Format(Vinorsoft.Core.CoreConstants.DateTimeFormat);
                    column.AddFor(m => m.CreatedBy);
                    column.Add().Type(GridCommandColumnType.Buttons).Buttons(b =>
                    {
                        b.Add().Name(GridColumnButtonName.Edit).Hint(Resources.Button_Edit);
                        b.Add().Name(GridColumnButtonName.Delete).Hint(Resources.Button_Delete);
                        b.Add().Icon("fa fa-refresh").OnClick("onResetPwd").Hint(Resources.Button_Reset_Pwd);
                    }).Width(100);
                }).MasterDetail(detail =>
                {
                    detail.Enabled(true);
                    detail.Template(@<text> @await Html.PartialAsync("_GridDetails") </text>);
                                        }).ToDefaultOption().OnEditingStart("onUpdateUser").OnToolbarPreparing("toolbar_preparing")
)
<script>

    function onResetPwd(e) {
        window.location.href = '@Url.Action("ResetPassword", controllerName, new { Area = areaName })/' + e.row.key;
    }

    function onUpdateUser(e) {
        e.cancel = true;
        window.location.href = '@Url.Action("UpdateUser", controllerName, new { Area = areaName })/' + e.key;
    }

    function toolbar_preparing(e) {
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                icon: "plus",
                onClick: function () {
                    window.location.href = '@Url.Action("NewUser", controllerName , new { Area = areaName })'
                }
            }
        })
    }
</script>

