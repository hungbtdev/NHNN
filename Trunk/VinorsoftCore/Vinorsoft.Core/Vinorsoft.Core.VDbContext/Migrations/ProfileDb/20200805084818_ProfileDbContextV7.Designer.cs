// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vinorsoft.Core.VDbContext;

namespace Vinorsoft.Core.VDbContext.Migrations.ProfileDb
{
    [DbContext(typeof(ProfileDbContext))]
    [Migration("20200805084818_ProfileDbContextV7")]
    partial class ProfileDbContextV7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vinorsoft.Core.Entities.Cities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<Guid>("CountryId");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<Guid?>("GeoAreaId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("GeoAreaId");

                    b.ToTable("Prf_Cities");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.Countries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Prf_Countries");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.Districts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("CityId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Prf_Districts");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.GeoAreas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Prf_GeoAreas");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.Profiles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<DateTime?>("BirthDate");

                    b.Property<Guid?>("CityId");

                    b.Property<Guid?>("CountryId");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description");

                    b.Property<Guid?>("DistrictId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<Guid?>("GeoAreaId");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<Guid?>("WardId");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("GeoAreaId");

                    b.HasIndex("WardId");

                    b.ToTable("Prf_Profiles");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.Wards", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<Guid>("DistrictId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<Guid?>("TenantId");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Prf_Wards");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.Cities", b =>
                {
                    b.HasOne("Vinorsoft.Core.Entities.Countries", "Countries")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Vinorsoft.Core.Entities.GeoAreas", "GeoAreas")
                        .WithMany("Cities")
                        .HasForeignKey("GeoAreaId");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.Districts", b =>
                {
                    b.HasOne("Vinorsoft.Core.Entities.Cities", "Cities")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.Profiles", b =>
                {
                    b.HasOne("Vinorsoft.Core.Entities.Cities", "Cities")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Vinorsoft.Core.Entities.Countries", "Countries")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Vinorsoft.Core.Entities.Districts", "Districts")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Vinorsoft.Core.Entities.GeoAreas", "GeoAreas")
                        .WithMany()
                        .HasForeignKey("GeoAreaId");

                    b.HasOne("Vinorsoft.Core.Entities.Wards", "Wards")
                        .WithMany()
                        .HasForeignKey("WardId");
                });

            modelBuilder.Entity("Vinorsoft.Core.Entities.Wards", b =>
                {
                    b.HasOne("Vinorsoft.Core.Entities.Districts", "Districts")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
